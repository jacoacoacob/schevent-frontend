/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    get: operations["AppController_getHello"];
  };
  "/events": {
    get: operations["EventsController_findAll"];
    post: operations["EventsController_create"];
  };
  "/events/{id}": {
    get: operations["EventsController_findOne"];
    delete: operations["EventsController_remove"];
    patch: operations["EventsController_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateEventDto: {
      name: string;
      description: string;
      startsAt: string;
      invitees: string[];
    };
    EventResponseDto: {
      _id: string;
      name: string;
      description: string;
      /** Format: date-time */
      startsAt: string;
      invitees: string[];
    };
    HttpExceptionDto: {
      statusCode: number;
      message: string;
    };
    UpdateEventDto: {
      name?: string;
      description?: string;
      startsAt?: string;
      invitees?: string[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AppController_getHello: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  EventsController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["EventResponseDto"][];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
    };
  };
  EventsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateEventDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["EventResponseDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
      500: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
    };
  };
  EventsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["EventResponseDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
    };
  };
  EventsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      200: {
        content: {
          "application/json": components["schemas"]["EventResponseDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
    };
  };
  EventsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateEventDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["EventResponseDto"];
        };
      };
      400: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
      404: {
        content: {
          "application/json": components["schemas"]["HttpExceptionDto"];
        };
      };
    };
  };
}
